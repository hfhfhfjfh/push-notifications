name: Send Ping Notification

on:
  repository_dispatch:
    types: [send-ping]

jobs:
  send_ping:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Create service account file
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > service-account.json

      - name: Install deps
        run: npm install googleapis node-fetch@2

      - name: Send notifications
        env:
          TOKENS: ${{ github.event.client_payload.tokens }}
          TITLE:  ${{ github.event.client_payload.title }}
          BODY:   ${{ github.event.client_payload.body }}
        run: |
          node <<'EOF'
          const { google } = require('googleapis');
          const fetch = require('node-fetch');
          const sa = require('./service-account.json');

          async function getAccessToken() {
            const jwt = new google.auth.JWT(
              sa.client_email,
              null,
              sa.private_key,
              ['https://www.googleapis.com/auth/firebase.messaging']
            );
            const { access_token } = await jwt.authorize();
            return access_token;
          }

          (async () => {
            const accessToken = await getAccessToken();
            const projectId = sa.project_id;
            const tokens = JSON.parse(process.env.TOKENS || '[]');
            const title  = process.env.TITLE || 'Ping';
            const body   = process.env.BODY  || 'Back to mining!';

            for (const token of tokens) {
              const message = {
                message: {
                  token,
                  notification: { title, body }
                }
              };

              const res = await fetch(`https://fcm.googleapis.com/v1/projects/${projectId}/messages:send`, {
                method: 'POST',
                headers: {
                  'Authorization': `Bearer ${accessToken}`,
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(message)
              });

              if (!res.ok) {
                const t = await res.text();
                console.error('FCM error:', res.status, t);
              } else {
                console.log('Sent to:', token.substring(0, 12) + '...');
              }
            }
            console.log('âœ… Pings processed');
          })();
          EOF
